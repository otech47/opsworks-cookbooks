user <%= node[:nginx][:user] %>;
worker_processes  <%= node[:nginx][:worker_processes] %>;

error_log  <%= node[:nginx][:log_dir] %>/error.log;
pid        <%= node[:nginx][:pid_file] %>;

events {
  worker_connections  <%= node[:nginx][:worker_connections] %>;
  multi_accept on;
  use epoll;
}

http {
  # BASIC SETTINGS

  include       <%= node[:nginx][:dir] %>/mime.types;
  default_type  application/octet-stream;

  <% node[:nginx][:log_format].each do |name, format| %>
  log_format <%= name %> <%= format %>;
  <% end %>

  access_log	<%= node[:nginx][:log_dir] %>/access.log;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;

  <% if node[:nginx][:keepalive] == "on" %>
  keepalive_timeout  <%= node[:nginx][:keepalive_timeout] %>;
  <% end %>

  gzip  <%= node[:nginx][:gzip] %>;
  gzip_static  <%= node[:nginx][:gzip_static] %>;
  <% if node[:nginx][:gzip] == "on" %>
  gzip_http_version <%= node[:nginx][:gzip_http_version] %>;
  gzip_comp_level <%= node[:nginx][:gzip_comp_level] %>;
  gzip_proxied <%= node[:nginx][:gzip_proxied] %>;
  gzip_types <%= node[:nginx][:gzip_types].join(' ') %>;
  gzip_vary <%= node[:nginx][:gzip_vary] %>;
  gzip_disable "<%= node[:nginx][:gzip_disable] %>";
  <% end %>

  client_max_body_size <%= node[:nginx][:client_max_body_size] %>;

  server_names_hash_bucket_size <%= node[:nginx][:server_names_hash_bucket_size] %>;

  include <%= node[:nginx][:dir] %>/conf.d/*.conf;
  include <%= node[:nginx][:dir] %>/sites-enabled/*;
  
  upstream SetmineWeb {
    server 127.0.0.1:3000
  }
  
  server {
    listen 80;
    
    if ($request_method ~ (GET|HEAD)) {
      return 301 https://$host$request_uri;
    }

    location / {
      proxy_set_header    Connection "";
      proxy_http_version  1.1;
      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto http;

      proxy_pass http://SetmineWeb;
    }
  }
  server {
    access_log /var/log/nginx/access-https.log;

    listen 443 ssl spdy;

    ssl on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;
    ssl_buffer_size 1400;
    ssl_session_tickets off;

    # Intentionally not supporting SSLv2 and SSLv3, they are not secure
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
    ssl_prefer_server_ciphers on;

    ssl_certificate /etc/ssl/setmine.com.crt;
    ssl_certificate_key /etc/ssl/setmine.com.key;
    ssl_dhparam /etc/ssl/setmine.com.dhparam.pem;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/startssl.stapling.pem;
    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    spdy_keepalive_timeout 300;
    spdy_headers_comp 9;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Front-End-Https on;

    location / {
      proxy_set_header   Connection "";
      proxy_http_version 1.1;
      proxy_set_header        Host              $host;
      proxy_set_header        X-Real-IP         $remote_addr;
      proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto https;

      proxy_pass http://SetmineWeb;
    }
  }
}
